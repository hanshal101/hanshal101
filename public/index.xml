<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hanshal Mehta</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Hanshal Mehta</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>An Introduction to eBPF</title>
      <link>http://localhost:1313/blog/ebpf/introduction-to-ebpf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/ebpf/introduction-to-ebpf/</guid>
      <description>Motivation In this blog series, we will deep dive into the fascinating world of eBPF (Extended Berkley Packet Filter) and its internals. Along the way, we will explore core BPF (Berkley Packet Filter) internals that are essential to understanding how eBPF operates under the hood. This journey will also include networking concepts, operating system principles, and computer architecture, all of which play a crucial role in making eBPF effective and powerful.</description>
    </item>
    
    <item>
      <title>Networking with eBPF: From Fundamentals to Advanced Applications</title>
      <link>http://localhost:1313/blog/ebpf/networking-with-ebpf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/ebpf/networking-with-ebpf/</guid>
      <description>Motivation eBPF (extended Berkeley Packet Filter) has revolutionized how we implement networking functionality in Linux systems. This comprehensive blog explores the networking concepts involved in eBPF, covering everything from fundamental principles to advanced implementations. With eBPF, developers can run sandboxed programs within the kernel space, providing unprecedented control over network traffic without compromising system stability or requiring kernel modifications.
Introduction to eBPF eBPF represents a significant evolution from the original Berkeley Packet Filter.</description>
    </item>
    
    <item>
      <title>Software Engineer Trainee</title>
      <link>http://localhost:1313/experience/new-leap-initiative/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/experience/new-leap-initiative/</guid>
      <description>New Leap Initiative | Mumbai, India</description>
    </item>
    
    <item>
      <title>DevOps/SRE Intern</title>
      <link>http://localhost:1313/experience/cloudraft/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/experience/cloudraft/</guid>
      <description>CloudRaft | Remote</description>
    </item>
    
    
  </channel>
</rss>
